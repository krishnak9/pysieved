[main]
# Authentication back-end to use
auth    = Dovecot
# User DB back-end to use
userdb  = Dovecot
# Storage back-end to use
storage = Exim
# Who are SIEVE scripts intended for ? (Dovecot or Exim)
consumer = Exim
# Bind to what address?  (Ignored with --stdin)
bindaddr = 0.0.0.0
# Listen on what port?  (Ignored with --stdin)
port    = 4190
# Write a pidfile here
pidfile = /var/run/pysieved.pid
# Prepend this path to result of userdb lookup if not absolute
#base = /var/mail

# Where to create temporary files
#tmpdir = /tmp

[TLS]
# Require STARTTLS before authentication
required = False
# TLS private key file
key = /etc/ssl/private/key.pem
# TLS certificate file
cert = /etc/ssl/private/certificate.pem
# Passphrase if the TLS private key is encrypted
# (this file should not be world-readable !)
#passphrase = magic

[SASL]
# How do we identify ourself to saslauthd?
service = managesieve
# Where's the magic mux file?
#mux = /var/run/saslauthd/mux

[PAM]
# How do we identify ourself to PAM?
service = pysieved

[Dovecot]
# Path to Dovecot's auth socket (do not set unless you're using Dovecot auth)
mux = /var/run/dovecot/auth-client
# Path to Dovecot's master socket (if using Dovecot userdb lookup)
master = /var/run/dovecot/auth-userdb

[Exim]
# Path to sendmail
sendmail = /opt/check-sieve
# Where in user directory to store scripts
scripts = sieve
# Filename used for the active SIEVE filter
active = .forward



